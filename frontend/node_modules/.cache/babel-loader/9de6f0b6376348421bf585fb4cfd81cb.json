{"ast":null,"code":"import _slicedToArray from \"/Users/phaseon/Documents/Development/GrocyTrackFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/phaseon/Documents/Development/GrocyTrackFrontend/src/components/forms/LoginForm.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport posed from \"react-pose\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\nconst LoginPose = posed.div({\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n});\n\nconst LoginForm = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        isVisible = _useState2[0],\n        setisVisible = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        username = _useState4[0],\n        setUsername = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        saveUsername = _useState8[0],\n        setSaveUsername = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        savedUsername = _useState10[0],\n        setSavedUsername = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        savedCheckboxState = _useState12[0],\n        setSavedCheckboxState = _useState12[1];\n\n  const fetchToken = useStoreActions(actions => actions.auth.fetchToken);\n  const authError = useStoreState(state => state.auth.authError);\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Assemble Object\n\n    let input = {\n      username: username,\n      password: password,\n      saveUsername: saveUsername\n    }; // Send to our action\n\n    fetchToken(input);\n  };\n\n  const handleChangeUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  const handleChangePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleChangeRememberUsername = checkedState => {\n    console.log(checkedState);\n    setSaveUsername(checkedState);\n  };\n\n  const readSavedUsernameHelper = () => {\n    let saved_data = localStorage.getItem(\"saved_username\");\n\n    if (saved_data) {\n      setSavedUsername(saved_data);\n      setUsername(saved_data);\n    } else {}\n  };\n\n  const readSavedCheckboxStateHelper = () => {\n    if (localStorage.getItem(\"saved_username\")) {\n      setSavedCheckboxState(true);\n    } else {\n      setSavedCheckboxState(false);\n    }\n  };\n\n  const setAuthErrorHelper = () => {\n    if (authError === 400) {\n      return React.createElement(Message, {\n        error: true,\n        header: \"Incorrect Username or Password\",\n        content: \"Try again please!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    } else if (authError === 500) {\n      return React.createElement(Message, {\n        error: true,\n        header: \"Internal Server Error\",\n        content: \"Wait a few minutes and try again please!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(() => readSavedUsernameHelper(), []);\n  useEffect(() => setisVisible(true), []);\n  useEffect(() => readSavedCheckboxStateHelper(), []);\n  return React.createElement(LoginPose, {\n    pose: isVisible ? \"visible\" : \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Form, {\n    widths: \"equal\",\n    error: authError ? true : false,\n    onSubmit: event => handleSubmit(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    name: \"username\",\n    required: true,\n    placeholder: \"Enter Username\",\n    defaultValue: savedUsername,\n    onChange: event => handleChangeUsername(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Enter Password\",\n    name: \"password\",\n    onChange: event => handleChangePassword(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), React.createElement(Form.Checkbox, {\n    onChange: (event, data) => handleChangeRememberUsername(data.checked),\n    label: \"Remember Username?\",\n    defaultValue: savedCheckboxState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(Form.Button, {\n    disabled: !username || !password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Submit\")), setAuthErrorHelper());\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/phaseon/Documents/Development/GrocyTrackFrontend/src/components/forms/LoginForm.jsx"],"names":["React","useState","useEffect","posed","Form","Message","useStoreActions","useStoreState","LoginPose","div","visible","opacity","transition","duration","ease","hidden","LoginForm","isVisible","setisVisible","username","setUsername","password","setPassword","saveUsername","setSaveUsername","savedUsername","setSavedUsername","savedCheckboxState","setSavedCheckboxState","fetchToken","actions","auth","authError","state","handleSubmit","event","preventDefault","input","handleChangeUsername","target","value","handleChangePassword","handleChangeRememberUsername","checkedState","console","log","readSavedUsernameHelper","saved_data","localStorage","getItem","readSavedCheckboxStateHelper","setAuthErrorHelper","data","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport posed from \"react-pose\";\nimport { Form, Message } from \"semantic-ui-react\";\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\n\nconst LoginPose = posed.div({\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n});\n\nconst LoginForm = () => {\n  const [isVisible, setisVisible] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [saveUsername, setSaveUsername] = useState(\"\");\n\n  const [savedUsername, setSavedUsername] = useState(\"\");\n  const [savedCheckboxState, setSavedCheckboxState] = useState(\"\");\n\n  const fetchToken = useStoreActions(actions => actions.auth.fetchToken);\n  const authError = useStoreState(state => state.auth.authError);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Assemble Object\n    let input = {\n      username: username,\n      password: password,\n      saveUsername: saveUsername\n    };\n    // Send to our action\n    fetchToken(input);\n  };\n\n  const handleChangeUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  const handleChangePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleChangeRememberUsername = checkedState => {\n    console.log(checkedState);\n    setSaveUsername(checkedState);\n  };\n\n  const readSavedUsernameHelper = () => {\n    let saved_data = localStorage.getItem(\"saved_username\");\n\n    if (saved_data) {\n      setSavedUsername(saved_data);\n      setUsername(saved_data);\n    } else {\n    }\n  };\n\n  const readSavedCheckboxStateHelper = () => {\n    if (localStorage.getItem(\"saved_username\")) {\n      setSavedCheckboxState(true);\n    } else {\n      setSavedCheckboxState(false);\n    }\n  };\n\n  const setAuthErrorHelper = () => {\n    if (authError === 400) {\n      return (\n        <Message\n          error\n          header={\"Incorrect Username or Password\"}\n          content={\"Try again please!\"}\n        />\n      );\n    } else if (authError === 500) {\n      return (\n        <Message\n          error\n          header={\"Internal Server Error\"}\n          content={\"Wait a few minutes and try again please!\"}\n        />\n      );\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(() => readSavedUsernameHelper(), []);\n\n  useEffect(() => setisVisible(true), []);\n\n  useEffect(() => readSavedCheckboxStateHelper(), []);\n\n  return (\n    <LoginPose pose={isVisible ? \"visible\" : \"hidden\"}>\n      <Form\n        widths={\"equal\"}\n        error={authError ? true : false}\n        onSubmit={event => handleSubmit(event)}\n      >\n        <Form.Field required>\n          <label>Username</label>\n          <input\n            name={\"username\"}\n            required={true}\n            placeholder={\"Enter Username\"}\n            defaultValue={savedUsername}\n            onChange={event => handleChangeUsername(event)}\n          />\n        </Form.Field>\n        <Form.Field required>\n          <label>Password</label>\n          <input\n            type={\"password\"}\n            placeholder={\"Enter Password\"}\n            name={\"password\"}\n            onChange={event => handleChangePassword(event)}\n          />\n        </Form.Field>\n        <Form.Checkbox\n          onChange={(event, data) => handleChangeRememberUsername(data.checked)}\n          label={\"Remember Username?\"}\n          defaultValue={savedCheckboxState}\n        />\n        <Form.Button disabled={!username || !password}>Submit</Form.Button>\n      </Form>\n      {setAuthErrorHelper()}\n    </LoginPose>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}