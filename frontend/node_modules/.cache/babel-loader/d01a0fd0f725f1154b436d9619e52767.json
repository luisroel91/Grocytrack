{"ast":null,"code":"var _jsxFileName = \"/Users/phaseon/Documents/Development/GrocyTrackFrontend/src/intros/Intro.jsx\";\nimport React from \"react\";\nimport SplitText from \"react-pose-text\";\nimport { Container, Message, Icon, Segment } from \"semantic-ui-react\";\nconst wordPoses = {\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nclass IntroParagraph extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isVisible: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isVisible: true\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      text: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      raised: true,\n      attached: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(SplitText, {\n      wordPoses: wordPoses,\n      pose: this.state.isVisible ? \"visible\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Tired of using your phone calculator to keep track of your grocery trips?\")), React.createElement(Segment, {\n      raised: true,\n      attached: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(SplitText, {\n      wordPoses: wordPoses,\n      pose: this.state.isVisible ? \"visible\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Tired of pressing the heckin' clear button and not remembering how much your cart is worth?\")), React.createElement(Segment, {\n      raised: true,\n      attached: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(SplitText, {\n      wordPoses: wordPoses,\n      pose: this.state.isVisible ? \"visible\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Want to avoid the uncomfortable situation at the register of not knowing how much the bill will be?\")), React.createElement(Segment, {\n      raised: true,\n      attached: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(SplitText, {\n      wordPoses: wordPoses,\n      pose: this.state.isVisible ? \"visible\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Want to keep better track of your grocery purchases and food habits ?\")), React.createElement(Message, {\n      positive: true,\n      attached: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(SplitText, {\n      wordPoses: wordPoses,\n      pose: this.state.isVisible ? \"visible\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"We feel your pain and made this for you!\")));\n  }\n\n}\n\nexport default IntroParagraph;","map":{"version":3,"sources":["/Users/phaseon/Documents/Development/GrocyTrackFrontend/src/intros/Intro.jsx"],"names":["React","SplitText","Container","Message","Icon","Segment","wordPoses","visible","opacity","transition","duration","ease","hidden","IntroParagraph","Component","state","isVisible","componentDidMount","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SplitText from \"react-pose-text\";\nimport { Container, Message, Icon, Segment } from \"semantic-ui-react\";\n\nconst wordPoses = {\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nclass IntroParagraph extends React.Component {\n  state = {\n    isVisible: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      isVisible: true\n    });\n  }\n\n  render() {\n    return (\n      <Container text textAlign={\"center\"}>\n        <Segment raised attached={\"top\"}>\n          <SplitText\n            wordPoses={wordPoses}\n            pose={this.state.isVisible ? \"visible\" : \"hidden\"}\n          >\n            Tired of using your phone calculator to keep track of your grocery\n            trips?\n          </SplitText>\n        </Segment>\n        <Segment raised attached>\n          <SplitText\n            wordPoses={wordPoses}\n            pose={this.state.isVisible ? \"visible\" : \"hidden\"}\n          >\n            Tired of pressing the heckin' clear button and not remembering how\n            much your cart is worth?\n          </SplitText>\n        </Segment>\n        <Segment raised attached>\n          <SplitText\n            wordPoses={wordPoses}\n            pose={this.state.isVisible ? \"visible\" : \"hidden\"}\n          >\n            Want to avoid the uncomfortable situation at the register of not\n            knowing how much the bill will be?\n          </SplitText>\n        </Segment>\n        <Segment raised attached>\n          <SplitText\n            wordPoses={wordPoses}\n            pose={this.state.isVisible ? \"visible\" : \"hidden\"}\n          >\n            Want to keep better track of your grocery purchases and food habits\n            ?\n          </SplitText>\n        </Segment>\n        <Message positive attached={\"bottom\"}>\n          <Icon name={\"heart\"} />\n          <SplitText\n            wordPoses={wordPoses}\n            pose={this.state.isVisible ? \"visible\" : \"hidden\"}\n          >\n            We feel your pain and made this for you!\n          </SplitText>\n        </Message>\n      </Container>\n    );\n  }\n}\n\nexport default IntroParagraph;\n"]},"metadata":{},"sourceType":"module"}