{"ast":null,"code":"import { action, thunk, computed } from \"easy-peasy\";\nimport axios from \"axios\";\nlet APIrequest = axios.create({\n  baseURL: \"http://localhost:8000/\"\n}); // To debug headers\n\nAPIrequest.interceptors.request.use(request => {\n  console.log(\"Making HTTP request\", request);\n  return request;\n});\nAPIrequest.interceptors.response.use(response => {\n  console.log(\"HTTP Response: \", response);\n  return response;\n});\nconst authModel = {\n  isLoggedIn: false,\n  token: computed(_ => {\n    if (localStorage.getItem(\"token\") === null) {\n      console.log(\"token: No token found in localStorage \");\n      return null;\n    } else {\n      return localStorage.getItem(\"token\");\n    }\n  }),\n  authError: null,\n  checkSavedToken: action((state, _) => {\n    if (state.token != null) {\n      console.log(\"checkSavedToken: Found Token in localStorage, loaded\");\n      APIrequest.defaults.headers.common[\"Authorization\"] = \"Token \" + state.token;\n      console.log(\"checkSavedToken: Set auth headers\");\n      state.isLoggedIn = true;\n      console.log(\"checkSavedToken: Logged in\");\n    } else {\n      console.log(\"checkSavedToken: Token state is null\");\n    }\n  }),\n  setToken: action((state, payload) => {\n    try {\n      localStorage.setItem(\"token\", payload.auth_token);\n      state.isLoggedIn = true;\n      console.log(\"setToken: Logged in\");\n    } catch (err) {\n      console.log(\"setToken: Could not set token: \" + err);\n    }\n  }),\n  deleteToken: action((state, payload) => {\n    try {\n      localStorage.removeItem(\"token\");\n      APIrequest.defaults.headers.common[\"Authorization\"] = \"\";\n      console.log(\"deleteToken: Token deleted. Headers reset.\");\n      state.isLoggedIn = false;\n    } catch (err) {\n      console.log(\"deleteToken: Could not delete token: \" + err);\n    }\n  }),\n  fetchToken: thunk(async (actions, payload) => {\n    return APIrequest.post(\"/token/login\", {\n      username: payload.username,\n      password: payload.password\n    }).then(response => response.data).then(json => {\n      actions.setToken(json);\n    }).catch(error => {\n      if (error.response) {\n        actions.updateAuthErrorState(error.response.status);\n      } else if (error.request) {\n        actions.updateAuthErrorState(error.request.status);\n      } else {\n        actions.updateAuthErrorState(error.message);\n      }\n    });\n  }),\n  revokeToken: thunk(async (actions, _) => {\n    return APIrequest.post(\"/token/logout\").then(response => {\n      actions.deleteToken();\n      console.log(\"revokeToken: Token revoked successfully\");\n    }).catch(err => {\n      console.log(\"revokeToken: Token revocation failed: \" + err);\n    });\n  }),\n  updateAuthErrorState: action((state, payload) => {\n    if (payload === 400) {\n      console.log(\"updateAuthErrorState: Bad request, usually means un/pw were wrong\");\n      state.authError = payload;\n    } else if (payload === 403) {\n      console.log(\"updateAuthErrorState: Forbidden? What are you up to, huh?\");\n      state.authError = payload;\n    } else if (payload === 500) {\n      console.log(\"updateAuthErrorState: Internal Server Error. Django is not happy\");\n    } else {\n      console.log(\"updateAuthErrorState: Error setting up request\");\n    }\n  })\n};\nconst userDataModel = {\n  userLists: [],\n  userObject: {\n    // mock, need to write function to grab from server\n    email: \"luisroel@me.com\",\n    sales_tax_rate: \"0.07\",\n    id: 1,\n    username: \"phaseon\",\n    // This does not exist in the backend, we read/write this value in the\n    // front end only\n    startup_route: \"/welcome\"\n  },\n  defaultPage: \"#\",\n  setDefaultPage: action((state, payload) => {\n    state.defaultPage = payload;\n  }),\n  isLoggedInListener: thunk((actions, payload, {\n    getStoreState\n  }) => {\n    if (getStoreState().auth.isLoggedIn) {\n      actions.setDefaultPage(getStoreState().userData.userObject.startup_route);\n      console.log(\"isLoggedInListener: defaultPage set to userObject route\");\n    } else {\n      actions.setDefaultPage(\"/\");\n      console.log(\"isLoggedInListener: defaulPage set to root\");\n    }\n  }, {\n    listenTo: [authModel.setToken, authModel.deleteToken, authModel.checkSavedToken]\n  }),\n  saveUsernameListener: thunk((actions, payload) => {\n    console.log(payload);\n\n    if (payload.saveUsername) {\n      localStorage.setItem(\"saved_username\", payload.username);\n      console.log(\"saveUsernameListener: Username \" + payload.username + \" saved\");\n    } else {\n      console.log(\"saveUsernameListener: No Username saved\");\n    }\n  }, {\n    listenTo: [authModel.fetchToken]\n  })\n};\nconst userRegistrationModel = {\n  registrationStatus: \"\",\n  setRegistrationStatus: action((state, payload) => {\n    if (payload.status === 200) {\n      state.registrationStatus = \"success\";\n    }\n  }),\n  postNewUser: thunk(async (actions, payload) => {\n    return APIrequest.post(\"/users/\", {\n      email: payload.email,\n      sales_tax_rate: payload.salesTaxRate,\n      username: payload.username,\n      password: payload.password\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      let regError = error.response.data;\n\n      if (regError.hasOwnProperty(\"username\")) {\n        console.log(\"Username Error\");\n      } else if (regError.hasOwnProperty(\"email\")) {\n        console.log(\"Email Error\");\n      } else if (regError.hasOwnProperty(\"sales_tax_rate\")) {\n        console.log(\"Sales tax rate error\");\n      } else if (regError.hasOwnProperty(\"password\")) {\n        console.log(\"Password error\");\n      }\n    });\n  })\n};\nconst model = {\n  auth: authModel,\n  userData: userDataModel,\n  userRegistration: userRegistrationModel\n};\nexport default model;","map":{"version":3,"sources":["/Users/phaseon/Documents/Development/GrocyTrackFrontend/src/statemanagement/model.js"],"names":["action","thunk","computed","axios","APIrequest","create","baseURL","interceptors","request","use","console","log","response","authModel","isLoggedIn","token","_","localStorage","getItem","authError","checkSavedToken","state","defaults","headers","common","setToken","payload","setItem","auth_token","err","deleteToken","removeItem","fetchToken","actions","post","username","password","then","data","json","catch","error","updateAuthErrorState","status","message","revokeToken","userDataModel","userLists","userObject","email","sales_tax_rate","id","startup_route","defaultPage","setDefaultPage","isLoggedInListener","getStoreState","auth","userData","listenTo","saveUsernameListener","saveUsername","userRegistrationModel","registrationStatus","setRegistrationStatus","postNewUser","salesTaxRate","regError","hasOwnProperty","model","userRegistration"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,YAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,UAAU,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAE;AADmB,CAAb,CAAjB,C,CAIA;;AAEAF,UAAU,CAACG,YAAX,CAAwBC,OAAxB,CAAgCC,GAAhC,CAAoCD,OAAO,IAAI;AAC7CE,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,OAAnC;AACA,SAAOA,OAAP;AACD,CAHD;AAKAJ,UAAU,CAACG,YAAX,CAAwBK,QAAxB,CAAiCH,GAAjC,CAAqCG,QAAQ,IAAI;AAC/CF,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,QAA/B;AACA,SAAOA,QAAP;AACD,CAHD;AAKA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,KADI;AAEhBC,EAAAA,KAAK,EAAEb,QAAQ,CAACc,CAAC,IAAI;AACnB,QAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,MAAkC,IAAtC,EAA4C;AAC1CR,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,aAAO,IAAP;AACD,KAHD,MAGO;AACL,aAAOM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACD;AACF,GAPc,CAFC;AAUhBC,EAAAA,SAAS,EAAE,IAVK;AAYhBC,EAAAA,eAAe,EAAEpB,MAAM,CAAC,CAACqB,KAAD,EAAQL,CAAR,KAAc;AACpC,QAAIK,KAAK,CAACN,KAAN,IAAe,IAAnB,EAAyB;AACvBL,MAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ;AACAP,MAAAA,UAAU,CAACkB,QAAX,CAAoBC,OAApB,CAA4BC,MAA5B,CAAmC,eAAnC,IACE,WAAWH,KAAK,CAACN,KADnB;AAEAL,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAU,MAAAA,KAAK,CAACP,UAAN,GAAmB,IAAnB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,KAPD,MAOO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD;AACF,GAXsB,CAZP;AAyBhBc,EAAAA,QAAQ,EAAEzB,MAAM,CAAC,CAACqB,KAAD,EAAQK,OAAR,KAAoB;AACnC,QAAI;AACFT,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BD,OAAO,CAACE,UAAtC;AACAP,MAAAA,KAAK,CAACP,UAAN,GAAmB,IAAnB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAJD,CAIE,OAAOkB,GAAP,EAAY;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCkB,GAAhD;AACD;AACF,GARe,CAzBA;AAmChBC,EAAAA,WAAW,EAAE9B,MAAM,CAAC,CAACqB,KAAD,EAAQK,OAAR,KAAoB;AACtC,QAAI;AACFT,MAAAA,YAAY,CAACc,UAAb,CAAwB,OAAxB;AACA3B,MAAAA,UAAU,CAACkB,QAAX,CAAoBC,OAApB,CAA4BC,MAA5B,CAAmC,eAAnC,IAAsD,EAAtD;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACAU,MAAAA,KAAK,CAACP,UAAN,GAAmB,KAAnB;AACD,KALD,CAKE,OAAOe,GAAP,EAAY;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAY,0CAA0CkB,GAAtD;AACD;AACF,GATkB,CAnCH;AA8ChBG,EAAAA,UAAU,EAAE/B,KAAK,CAAC,OAAOgC,OAAP,EAAgBP,OAAhB,KAA4B;AAC5C,WAAOtB,UAAU,CAAC8B,IAAX,CAAgB,cAAhB,EAAgC;AACrCC,MAAAA,QAAQ,EAAET,OAAO,CAACS,QADmB;AAErCC,MAAAA,QAAQ,EAAEV,OAAO,CAACU;AAFmB,KAAhC,EAIJC,IAJI,CAICzB,QAAQ,IAAIA,QAAQ,CAAC0B,IAJtB,EAKJD,IALI,CAKCE,IAAI,IAAI;AACZN,MAAAA,OAAO,CAACR,QAAR,CAAiBc,IAAjB;AACD,KAPI,EAQJC,KARI,CAQEC,KAAK,IAAI;AACd,UAAIA,KAAK,CAAC7B,QAAV,EAAoB;AAClBqB,QAAAA,OAAO,CAACS,oBAAR,CAA6BD,KAAK,CAAC7B,QAAN,CAAe+B,MAA5C;AACD,OAFD,MAEO,IAAIF,KAAK,CAACjC,OAAV,EAAmB;AACxByB,QAAAA,OAAO,CAACS,oBAAR,CAA6BD,KAAK,CAACjC,OAAN,CAAcmC,MAA3C;AACD,OAFM,MAEA;AACLV,QAAAA,OAAO,CAACS,oBAAR,CAA6BD,KAAK,CAACG,OAAnC;AACD;AACF,KAhBI,CAAP;AAiBD,GAlBgB,CA9CD;AAkEhBC,EAAAA,WAAW,EAAE5C,KAAK,CAAC,OAAOgC,OAAP,EAAgBjB,CAAhB,KAAsB;AACvC,WAAOZ,UAAU,CAAC8B,IAAX,CAAgB,eAAhB,EACJG,IADI,CACCzB,QAAQ,IAAI;AAChBqB,MAAAA,OAAO,CAACH,WAAR;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD,KAJI,EAKJ6B,KALI,CAKEX,GAAG,IAAI;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAA2CkB,GAAvD;AACD,KAPI,CAAP;AAQD,GATiB,CAlEF;AA6EhBa,EAAAA,oBAAoB,EAAE1C,MAAM,CAAC,CAACqB,KAAD,EAAQK,OAAR,KAAoB;AAC/C,QAAIA,OAAO,KAAK,GAAhB,EAAqB;AACnBhB,MAAAA,OAAO,CAACC,GAAR,CACE,mEADF;AAGAU,MAAAA,KAAK,CAACF,SAAN,GAAkBO,OAAlB;AACD,KALD,MAKO,IAAIA,OAAO,KAAK,GAAhB,EAAqB;AAC1BhB,MAAAA,OAAO,CAACC,GAAR,CAAY,2DAAZ;AACAU,MAAAA,KAAK,CAACF,SAAN,GAAkBO,OAAlB;AACD,KAHM,MAGA,IAAIA,OAAO,KAAK,GAAhB,EAAqB;AAC1BhB,MAAAA,OAAO,CAACC,GAAR,CACE,kEADF;AAGD,KAJM,MAIA;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACD;AACF,GAhB2B;AA7EZ,CAAlB;AAgGA,MAAMmC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,UAAU,EAAE;AACV;AACAC,IAAAA,KAAK,EAAE,iBAFG;AAGVC,IAAAA,cAAc,EAAE,MAHN;AAIVC,IAAAA,EAAE,EAAE,CAJM;AAKVhB,IAAAA,QAAQ,EAAE,SALA;AAMV;AACA;AACAiB,IAAAA,aAAa,EAAE;AARL,GAFQ;AAapBC,EAAAA,WAAW,EAAE,GAbO;AAepBC,EAAAA,cAAc,EAAEtD,MAAM,CAAC,CAACqB,KAAD,EAAQK,OAAR,KAAoB;AACzCL,IAAAA,KAAK,CAACgC,WAAN,GAAoB3B,OAApB;AACD,GAFqB,CAfF;AAmBpB6B,EAAAA,kBAAkB,EAAEtD,KAAK,CACvB,CAACgC,OAAD,EAAUP,OAAV,EAAmB;AAAE8B,IAAAA;AAAF,GAAnB,KAAyC;AACvC,QAAIA,aAAa,GAAGC,IAAhB,CAAqB3C,UAAzB,EAAqC;AACnCmB,MAAAA,OAAO,CAACqB,cAAR,CACEE,aAAa,GAAGE,QAAhB,CAAyBV,UAAzB,CAAoCI,aADtC;AAGA1C,MAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;AACD,KALD,MAKO;AACLsB,MAAAA,OAAO,CAACqB,cAAR,CAAuB,GAAvB;AACA5C,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACD;AACF,GAXsB,EAYvB;AACEgD,IAAAA,QAAQ,EAAE,CACR9C,SAAS,CAACY,QADF,EAERZ,SAAS,CAACiB,WAFF,EAGRjB,SAAS,CAACO,eAHF;AADZ,GAZuB,CAnBL;AAwCpBwC,EAAAA,oBAAoB,EAAE3D,KAAK,CACzB,CAACgC,OAAD,EAAUP,OAAV,KAAsB;AACpBhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,OAAZ;;AACA,QAAIA,OAAO,CAACmC,YAAZ,EAA0B;AACxB5C,MAAAA,YAAY,CAACU,OAAb,CAAqB,gBAArB,EAAuCD,OAAO,CAACS,QAA/C;AACAzB,MAAAA,OAAO,CAACC,GAAR,CACE,oCAAoCe,OAAO,CAACS,QAA5C,GAAuD,QADzD;AAGD,KALD,MAKO;AACLzB,MAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD;AACF,GAXwB,EAYzB;AAAEgD,IAAAA,QAAQ,EAAE,CAAC9C,SAAS,CAACmB,UAAX;AAAZ,GAZyB;AAxCP,CAAtB;AAwDA,MAAM8B,qBAAqB,GAAG;AAC5BC,EAAAA,kBAAkB,EAAE,EADQ;AAG5BC,EAAAA,qBAAqB,EAAEhE,MAAM,CAAC,CAACqB,KAAD,EAAQK,OAAR,KAAoB;AAChD,QAAIA,OAAO,CAACiB,MAAR,KAAmB,GAAvB,EAA4B;AAC1BtB,MAAAA,KAAK,CAAC0C,kBAAN,GAA2B,SAA3B;AACD;AACF,GAJ4B,CAHD;AAS5BE,EAAAA,WAAW,EAAEhE,KAAK,CAAC,OAAOgC,OAAP,EAAgBP,OAAhB,KAA4B;AAC7C,WAAOtB,UAAU,CAAC8B,IAAX,CAAgB,SAAhB,EAA2B;AAChCe,MAAAA,KAAK,EAAEvB,OAAO,CAACuB,KADiB;AAEhCC,MAAAA,cAAc,EAAExB,OAAO,CAACwC,YAFQ;AAGhC/B,MAAAA,QAAQ,EAAET,OAAO,CAACS,QAHc;AAIhCC,MAAAA,QAAQ,EAAEV,OAAO,CAACU;AAJc,KAA3B,EAMJC,IANI,CAMCzB,QAAQ,IAAI;AAChBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACD,KARI,EASJ4B,KATI,CASEC,KAAK,IAAI;AACd,UAAI0B,QAAQ,GAAG1B,KAAK,CAAC7B,QAAN,CAAe0B,IAA9B;;AAEA,UAAI6B,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAJ,EAAyC;AACvC1D,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,OAFD,MAEO,IAAIwD,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAJ,EAAsC;AAC3C1D,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,OAFM,MAEA,IAAIwD,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAJ,EAA+C;AACpD1D,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,OAFM,MAEA,IAAIwD,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAJ,EAAyC;AAC9C1D,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,KArBI,CAAP;AAsBD,GAvBiB;AATU,CAA9B;AAmCA,MAAM0D,KAAK,GAAG;AACZZ,EAAAA,IAAI,EAAE5C,SADM;AAEZ6C,EAAAA,QAAQ,EAAEZ,aAFE;AAGZwB,EAAAA,gBAAgB,EAAER;AAHN,CAAd;AAMA,eAAeO,KAAf","sourcesContent":["import { action, thunk, computed } from \"easy-peasy\";\nimport axios from \"axios\";\n\nlet APIrequest = axios.create({\n  baseURL: \"http://localhost:8000/\"\n});\n\n// To debug headers\n\nAPIrequest.interceptors.request.use(request => {\n  console.log(\"Making HTTP request\", request);\n  return request;\n});\n\nAPIrequest.interceptors.response.use(response => {\n  console.log(\"HTTP Response: \", response);\n  return response;\n});\n\nconst authModel = {\n  isLoggedIn: false,\n  token: computed(_ => {\n    if (localStorage.getItem(\"token\") === null) {\n      console.log(\"token: No token found in localStorage \");\n      return null;\n    } else {\n      return localStorage.getItem(\"token\");\n    }\n  }),\n  authError: null,\n\n  checkSavedToken: action((state, _) => {\n    if (state.token != null) {\n      console.log(\"checkSavedToken: Found Token in localStorage, loaded\");\n      APIrequest.defaults.headers.common[\"Authorization\"] =\n        \"Token \" + state.token;\n      console.log(\"checkSavedToken: Set auth headers\");\n      state.isLoggedIn = true;\n      console.log(\"checkSavedToken: Logged in\");\n    } else {\n      console.log(\"checkSavedToken: Token state is null\");\n    }\n  }),\n\n  setToken: action((state, payload) => {\n    try {\n      localStorage.setItem(\"token\", payload.auth_token);\n      state.isLoggedIn = true;\n      console.log(\"setToken: Logged in\");\n    } catch (err) {\n      console.log(\"setToken: Could not set token: \" + err);\n    }\n  }),\n\n  deleteToken: action((state, payload) => {\n    try {\n      localStorage.removeItem(\"token\");\n      APIrequest.defaults.headers.common[\"Authorization\"] = \"\";\n      console.log(\"deleteToken: Token deleted. Headers reset.\");\n      state.isLoggedIn = false;\n    } catch (err) {\n      console.log(\"deleteToken: Could not delete token: \" + err);\n    }\n  }),\n\n  fetchToken: thunk(async (actions, payload) => {\n    return APIrequest.post(\"/token/login\", {\n      username: payload.username,\n      password: payload.password\n    })\n      .then(response => response.data)\n      .then(json => {\n        actions.setToken(json);\n      })\n      .catch(error => {\n        if (error.response) {\n          actions.updateAuthErrorState(error.response.status);\n        } else if (error.request) {\n          actions.updateAuthErrorState(error.request.status);\n        } else {\n          actions.updateAuthErrorState(error.message);\n        }\n      });\n  }),\n\n  revokeToken: thunk(async (actions, _) => {\n    return APIrequest.post(\"/token/logout\")\n      .then(response => {\n        actions.deleteToken();\n        console.log(\"revokeToken: Token revoked successfully\");\n      })\n      .catch(err => {\n        console.log(\"revokeToken: Token revocation failed: \" + err);\n      });\n  }),\n\n  updateAuthErrorState: action((state, payload) => {\n    if (payload === 400) {\n      console.log(\n        \"updateAuthErrorState: Bad request, usually means un/pw were wrong\"\n      );\n      state.authError = payload;\n    } else if (payload === 403) {\n      console.log(\"updateAuthErrorState: Forbidden? What are you up to, huh?\");\n      state.authError = payload;\n    } else if (payload === 500) {\n      console.log(\n        \"updateAuthErrorState: Internal Server Error. Django is not happy\"\n      );\n    } else {\n      console.log(\"updateAuthErrorState: Error setting up request\");\n    }\n  })\n};\n\nconst userDataModel = {\n  userLists: [],\n  userObject: {\n    // mock, need to write function to grab from server\n    email: \"luisroel@me.com\",\n    sales_tax_rate: \"0.07\",\n    id: 1,\n    username: \"phaseon\",\n    // This does not exist in the backend, we read/write this value in the\n    // front end only\n    startup_route: \"/welcome\"\n  },\n\n  defaultPage: \"#\",\n\n  setDefaultPage: action((state, payload) => {\n    state.defaultPage = payload;\n  }),\n\n  isLoggedInListener: thunk(\n    (actions, payload, { getStoreState }) => {\n      if (getStoreState().auth.isLoggedIn) {\n        actions.setDefaultPage(\n          getStoreState().userData.userObject.startup_route\n        );\n        console.log(\"isLoggedInListener: defaultPage set to userObject route\");\n      } else {\n        actions.setDefaultPage(\"/\");\n        console.log(\"isLoggedInListener: defaulPage set to root\");\n      }\n    },\n    {\n      listenTo: [\n        authModel.setToken,\n        authModel.deleteToken,\n        authModel.checkSavedToken\n      ]\n    }\n  ),\n\n  saveUsernameListener: thunk(\n    (actions, payload) => {\n      console.log(payload);\n      if (payload.saveUsername) {\n        localStorage.setItem(\"saved_username\", payload.username);\n        console.log(\n          \"saveUsernameListener: Username \" + payload.username + \" saved\"\n        );\n      } else {\n        console.log(\"saveUsernameListener: No Username saved\");\n      }\n    },\n    { listenTo: [authModel.fetchToken] }\n  )\n};\n\nconst userRegistrationModel = {\n  registrationStatus: \"\",\n\n  setRegistrationStatus: action((state, payload) => {\n    if (payload.status === 200) {\n      state.registrationStatus = \"success\";\n    }\n  }),\n\n  postNewUser: thunk(async (actions, payload) => {\n    return APIrequest.post(\"/users/\", {\n      email: payload.email,\n      sales_tax_rate: payload.salesTaxRate,\n      username: payload.username,\n      password: payload.password\n    })\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        let regError = error.response.data;\n\n        if (regError.hasOwnProperty(\"username\")) {\n          console.log(\"Username Error\");\n        } else if (regError.hasOwnProperty(\"email\")) {\n          console.log(\"Email Error\");\n        } else if (regError.hasOwnProperty(\"sales_tax_rate\")) {\n          console.log(\"Sales tax rate error\");\n        } else if (regError.hasOwnProperty(\"password\")) {\n          console.log(\"Password error\");\n        }\n      });\n  })\n};\n\nconst model = {\n  auth: authModel,\n  userData: userDataModel,\n  userRegistration: userRegistrationModel\n};\n\nexport default model;\n"]},"metadata":{},"sourceType":"module"}