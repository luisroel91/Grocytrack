{"ast":null,"code":"import _slicedToArray from \"/Users/phaseon/Documents/Development/GrocyTrackFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/phaseon/Documents/Development/GrocyTrackFrontend/src/components/utils/PosedLink.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport posed from \"react-pose\";\nimport SplitText from \"react-pose-text\";\nimport { Link } from \"react-router-dom\";\nconst LinkPose = posed.span({\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900\n    }\n  }\n});\nconst wordPoses = {\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nconst PosedLink = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        isVisible = _useState2[0],\n        setisVisible = _useState2[1];\n\n  useEffect(() => setisVisible(true), []);\n  return React.createElement(LinkPose, {\n    pose: isVisible ? \"visible\" : \"hidden\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: props.href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(SplitText, {\n    wordPoses: wordPoses,\n    pose: isVisible ? \"visible\" : \"hidden\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.currentText)));\n};\n\nexport default PosedLink;","map":{"version":3,"sources":["/Users/phaseon/Documents/Development/GrocyTrackFrontend/src/components/utils/PosedLink.jsx"],"names":["React","useEffect","useState","posed","SplitText","Link","LinkPose","span","visible","opacity","transition","duration","hidden","wordPoses","ease","PosedLink","props","isVisible","setisVisible","href","onClick","currentText"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,IAAN,CAAW;AAC1BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,CADF;AAEPC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAFL,GADiB;AAK1BC,EAAAA,MAAM,EAAE;AACNH,IAAAA,OAAO,EAAE,CADH;AAENC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAFN;AALkB,CAAX,CAAjB;AAWA,MAAME,SAAS,GAAG;AAChBL,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,CADF;AAEPC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVG,MAAAA,IAAI,EAAE;AAFI;AAFL,GADO;AAQhBF,EAAAA,MAAM,EAAE;AACNH,IAAAA,OAAO,EAAE,CADH;AAENC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVG,MAAAA,IAAI,EAAE;AAFI;AAFN;AARQ,CAAlB;;AAiBA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA,oBACSd,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,QAClBe,SADkB;AAAA,QACPC,YADO;;AAGzBjB,EAAAA,SAAS,CAAC,MAAMiB,YAAY,CAAC,IAAD,CAAnB,EAA2B,EAA3B,CAAT;AAEA,SACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAED,SAAS,GAAG,SAAH,GAAe,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAED,KAAK,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEN,SADb;AAEE,IAAA,IAAI,EAAEI,SAAS,GAAG,SAAH,GAAe,QAFhC;AAGE,IAAA,OAAO,EAAED,KAAK,CAACI,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGJ,KAAK,CAACK,WALT,CADF,CADF,CADF;AAaD,CAlBD;;AAoBA,eAAeN,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport posed from \"react-pose\";\nimport SplitText from \"react-pose-text\";\nimport { Link } from \"react-router-dom\";\n\nconst LinkPose = posed.span({\n  visible: {\n    opacity: 1,\n    transition: { duration: 900 }\n  },\n  hidden: {\n    opacity: 0,\n    transition: { duration: 900 }\n  }\n});\n\nconst wordPoses = {\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nconst PosedLink = props => {\n  const [isVisible, setisVisible] = useState(\"\");\n\n  useEffect(() => setisVisible(true), []);\n\n  return (\n    <LinkPose pose={isVisible ? \"visible\" : \"hidden\"}>\n      <Link to={props.href}>\n        <SplitText\n          wordPoses={wordPoses}\n          pose={isVisible ? \"visible\" : \"hidden\"}\n          onClick={props.onClick}\n        >\n          {props.currentText}\n        </SplitText>\n      </Link>\n    </LinkPose>\n  );\n};\n\nexport default PosedLink;\n"]},"metadata":{},"sourceType":"module"}