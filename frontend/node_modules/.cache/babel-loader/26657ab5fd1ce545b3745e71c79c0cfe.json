{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport posed from 'react-pose';\nimport { invariant } from 'hey-listen';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n}\n\nvar splitStyles = {\n  display: 'inline-block'\n};\n\nvar parseText = function (text) {\n  invariant(typeof text === 'string', 'Child of SplitText must be a string');\n  return {\n    text: text,\n    numChars: text.length,\n    splitText: text.split(' ').map(function (word) {\n      return word.split('');\n    })\n  };\n};\n\nvar getPoseProps = function (props) {\n  var wordPoses = props.wordPoses,\n      charPoses = props.charPoses,\n      children = props.children,\n      poseProps = __rest(props, [\"wordPoses\", \"charPoses\", \"children\"]);\n\n  return poseProps;\n};\n\nvar SplitText = function (_super) {\n  __extends(SplitText, _super);\n\n  function SplitText(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {};\n    var wordPoses = props.wordPoses,\n        charPoses = props.charPoses,\n        children = props.children;\n    parseText(children);\n    if (wordPoses) _this.Word = posed.div(wordPoses);\n    if (charPoses) _this.Char = posed.div(charPoses);\n    return _this;\n  }\n\n  SplitText.getDerivedStateFromProps = function (_a, state) {\n    var children = _a.children;\n    return !state || children !== state.text ? parseText(children) : null;\n  };\n\n  SplitText.prototype.renderChars = function (word, wordIndex, numWords, baseCharCount) {\n    var _this = this;\n\n    var numChars = this.state.numChars;\n    var numCharsInWord = word.length;\n    var text = this.state.text;\n    return word.map(function (char, i) {\n      return _this.Char ? React.createElement(_this.Char, __assign({\n        key: text + i,\n        style: splitStyles,\n        wordIndex: wordIndex,\n        numWords: numWords,\n        charIndex: baseCharCount + i,\n        charInWordIndex: i,\n        numChars: numChars,\n        numCharsInWord: numCharsInWord\n      }, getPoseProps(_this.props)), char) : char;\n    });\n  };\n\n  SplitText.prototype.renderWords = function () {\n    var _this = this;\n\n    var _a = this.state,\n        text = _a.text,\n        splitText = _a.splitText;\n    var numWords = splitText.length;\n    var charCount = 0;\n    return splitText.map(function (word, i) {\n      var chars = _this.renderChars(word, i, numWords, charCount).concat([i !== numWords - 1 ? '\\u00A0' : null]);\n\n      charCount += word.length;\n      return _this.Word ? React.createElement(_this.Word, __assign({\n        key: text + i,\n        style: splitStyles,\n        wordIndex: i,\n        numWords: numWords\n      }, getPoseProps(_this.props)), chars) : React.createElement(\"div\", {\n        style: splitStyles,\n        key: text + i\n      }, chars);\n    });\n  };\n\n  SplitText.prototype.render = function () {\n    return this.renderWords();\n  };\n\n  return SplitText;\n}(PureComponent);\n\nexport default SplitText;","map":null,"metadata":{},"sourceType":"module"}