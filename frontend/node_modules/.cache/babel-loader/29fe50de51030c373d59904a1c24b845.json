{"ast":null,"code":"var _jsxFileName = \"/Users/phaseon/Documents/Development/GrocyTrackFrontend/src/components/forms/OptionsForm.jsx\";\nimport React from \"react\";\nimport posed from \"react-pose\";\nimport { Container, Form } from \"semantic-ui-react\";\nimport SplitText from \"react-pose-text\";\nconst OptionsPose = posed.div({\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n});\nconst wordPoses = {\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nclass OptionsForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isVisible: false,\n      skipToLists: false,\n      skipToNewList: true,\n      currentPassword: null,\n      newPassword: null,\n      newUsername: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isVisible: true\n    });\n  }\n\n  render() {\n    return React.createElement(OptionsPose, {\n      pose: this.state.isVisible ? \"visible\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Form, {\n      widths: \"equal\",\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form.Radio, {\n      size: \"huge\",\n      slider: true,\n      label: \"Go to a New List on Startup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Form.Radio, {\n      size: \"huge\",\n      slider: true,\n      label: \"Go to My Lists on Startup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Container, {\n      as: \"h1\",\n      text: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(SplitText, {\n      wordPoses: wordPoses,\n      pose: this.state.isVisible ? \"visible\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Want to change your username/password?\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(SplitText, {\n      wordPoses: wordPoses,\n      pose: this.state.isVisible ? \"visible\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Enter your current password and then fill either or both fields\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Current Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Current Password\",\n      name: \"current_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      name: \"new_password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Container, {\n      as: \"h1\",\n      text: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(SplitText, {\n      wordPoses: wordPoses,\n      pose: this.state.isVisible ? \"visible\" : \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"And/Or\")), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"New Username\"), React.createElement(\"input\", {\n      placeholder: \"New Username\",\n      name: \"new_username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      size: \"huge\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Confirm\"))));\n  }\n\n}\n\nexport default OptionsForm;","map":{"version":3,"sources":["/Users/phaseon/Documents/Development/GrocyTrackFrontend/src/components/forms/OptionsForm.jsx"],"names":["React","posed","Container","Form","SplitText","OptionsPose","div","visible","opacity","transition","duration","ease","hidden","wordPoses","OptionsForm","Component","state","isVisible","skipToLists","skipToNewList","currentPassword","newPassword","newUsername","componentDidMount","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport posed from \"react-pose\";\nimport { Container, Form } from \"semantic-ui-react\";\n\nimport SplitText from \"react-pose-text\";\n\nconst OptionsPose = posed.div({\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n});\n\nconst wordPoses = {\n  visible: {\n    opacity: 1,\n    transition: {\n      duration: 900,\n      ease: \"easeIn\"\n    }\n  },\n  hidden: {\n    opacity: 0,\n    transition: {\n      duration: 900,\n      ease: \"easeOut\"\n    }\n  }\n};\n\nclass OptionsForm extends React.Component {\n  state = {\n    isVisible: false,\n    skipToLists: false,\n    skipToNewList: true,\n    currentPassword: null,\n    newPassword: null,\n    newUsername: null\n  };\n\n  componentDidMount() {\n    this.setState({\n      isVisible: true\n    });\n  }\n\n  render() {\n    return (\n      <OptionsPose pose={this.state.isVisible ? \"visible\" : \"hidden\"}>\n        <br />\n        <Form widths={\"equal\"} textAlign={\"center\"}>\n          <Form.Radio\n            size={\"huge\"}\n            slider\n            label={\"Go to a New List on Startup\"}\n          />\n          <Form.Radio\n            size={\"huge\"}\n            slider\n            label={\"Go to My Lists on Startup\"}\n          />\n          <Container as={\"h1\"} text>\n            <SplitText\n              wordPoses={wordPoses}\n              pose={this.state.isVisible ? \"visible\" : \"hidden\"}\n            >\n              Want to change your username/password?\n            </SplitText>\n            <br />\n            <br />\n            <SplitText\n              wordPoses={wordPoses}\n              pose={this.state.isVisible ? \"visible\" : \"hidden\"}\n            >\n              Enter your current password and then fill either or both fields\n            </SplitText>\n          </Container>\n          <br />\n          <Form.Field required>\n            <label>Current Password</label>\n            <input\n              type={\"password\"}\n              placeholder={\"Current Password\"}\n              name={\"current_password\"}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>New Password</label>\n            <input\n              type={\"password\"}\n              placeholder={\"New Password\"}\n              name={\"new_password\"}\n            />\n          </Form.Field>\n          <Container as={\"h1\"} text>\n            <SplitText\n              wordPoses={wordPoses}\n              pose={this.state.isVisible ? \"visible\" : \"hidden\"}\n            >\n              And/Or\n            </SplitText>\n          </Container>\n\n          <Form.Field>\n            <label>New Username</label>\n            <input placeholder={\"New Username\"} name={\"new_username\"} />\n          </Form.Field>\n          <br />\n          <Form.Button size={\"huge\"} type={\"submit\"}>\n            <label>Confirm</label>\n          </Form.Button>\n        </Form>\n      </OptionsPose>\n    );\n  }\n}\n\nexport default OptionsForm;\n"]},"metadata":{},"sourceType":"module"}